# Generated by Django 5.0.8 on 2024-09-12 21:09

import charidfield.fields
import django.core.validators
import django.db.models.deletion
import ksuid.ksuid
import phonenumber_field.modelfields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('db_id', charidfield.fields.CharIDField(default=ksuid.ksuid.Ksuid, editable=False, help_text='ksuid formatter for this entity.', max_length=50, prefix='addr_', primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('address_line_1', models.CharField(max_length=255)),
                ('address_line_2', models.CharField(blank=True, max_length=255, null=True)),
                ('building_name', models.CharField(blank=True, max_length=50, null=True)),
                ('building_suite_number', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(max_length=100)),
                ('postal_code', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(message='Enter a valid US postal code in the format XXXXX or XXXXX-XXXX.', regex='^\\d{5}(?:-\\d{4})?$')])),
            ],
        ),
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('db_id', charidfield.fields.CharIDField(default=ksuid.ksuid.Ksuid, editable=False, help_text='ksuid formatter for this entity.', max_length=50, prefix='attr_', primary_key=True, serialize=False, unique=True)),
                ('label', models.CharField()),
                ('abbreviation', models.CharField()),
                ('description', models.TextField()),
                ('domain', models.CharField(choices=[('trial', 'Trial'), ('project', 'Project'), ('germplasm', 'Germplasm')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('db_id', charidfield.fields.CharIDField(default=ksuid.ksuid.Ksuid, editable=False, help_text='ksuid formatter for this entity.', max_length=50, prefix='loc_', primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('type', models.CharField(choices=[('plot', 'Plot'), ('trial', 'Trial'), ('general', 'General')])),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('db_id', charidfield.fields.CharIDField(default=ksuid.ksuid.Ksuid, editable=False, help_text='ksuid formatter for this entity.', max_length=50, prefix='proj_', primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(unique=True)),
                ('description', models.TextField()),
                ('funding', models.CharField(max_length=255)),
                ('website', models.URLField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('db_id', charidfield.fields.CharIDField(default=ksuid.ksuid.Ksuid, editable=False, help_text='ksuid formatter for this entity.', max_length=50, prefix='state_', primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('abbreviation', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('db_id', charidfield.fields.CharIDField(default=ksuid.ksuid.Ksuid, editable=False, help_text='ksuid formatter for this entity.', max_length=50, prefix='org_', primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(unique=True)),
                ('abbreviation', models.CharField(unique=True)),
                ('ror_id', models.CharField(max_length=30, unique=True, validators=[django.core.validators.RegexValidator(message='Enter a valid ROR ID in the format https://ror.org/XXXXXXXXX.', regex='^https://ror\\.org/[a-zA-Z0-9]{9}$')])),
                ('logo_url', models.CharField(blank=True, max_length=255, null=True)),
                ('address_id', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='resources.address')),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('db_id', charidfield.fields.CharIDField(default=ksuid.ksuid.Ksuid, editable=False, help_text='ksuid formatter for this entity.', max_length=50, prefix='person_', primary_key=True, serialize=False, unique=True)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('middle_initial', models.CharField(max_length=1)),
                ('orcid', models.CharField(blank=True, max_length=19, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None)),
                ('affiliation_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resources.organization')),
            ],
        ),
        migrations.AddField(
            model_name='address',
            name='state_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resources.state'),
        ),
    ]
