# Generated by Django 5.0.8 on 2024-09-12 21:09

import charidfield.fields
import config.enumerations
import django.db.models.deletion
import ksuid.ksuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ontology', '0001_initial'),
        ('resources', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CommonName',
            fields=[
                ('db_id', charidfield.fields.CharIDField(default=ksuid.ksuid.Ksuid, editable=False, help_text='ksuid formatter for this entity.', max_length=50, prefix='commonName_', primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Treatment',
            fields=[
                ('db_id', charidfield.fields.CharIDField(default=ksuid.ksuid.Ksuid, editable=False, help_text='ksuid formatter for this entity.', max_length=50, prefix='treatment_', primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('type', models.CharField(choices=[('germplasm', 'Germplasm'), ('planting', 'Planting'), ('fertilizer', 'Fertilizer'), ('operations', 'Operations'), ('herbicide', 'Herbicide'), ('other', 'Other')], max_length=255)),
                ('description', models.TextField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Germplasm',
            fields=[
                ('db_id', charidfield.fields.CharIDField(default=ksuid.ksuid.Ksuid, editable=False, help_text='ksuid formatter for this entity.', max_length=50, prefix='germ_', primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('type', models.CharField(choices=[('pgc', 'PGC'), ('crop', 'Crop')], max_length=255)),
                ('genus', models.CharField(max_length=255)),
                ('species', models.CharField(default='spp.', max_length=255)),
                ('common_name_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_storage.commonname')),
            ],
        ),
        migrations.CreateModel(
            name='GermplasmAlias',
            fields=[
                ('db_id', charidfield.fields.CharIDField(default=ksuid.ksuid.Ksuid, editable=False, help_text='ksuid formatter for this entity.', max_length=50, prefix='germAlias_', primary_key=True, serialize=False, unique=True)),
                ('alias', models.CharField(max_length=255)),
                ('germplasm_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_storage.germplasm')),
            ],
        ),
        migrations.CreateModel(
            name='Plot',
            fields=[
                ('db_id', charidfield.fields.CharIDField(default=ksuid.ksuid.Ksuid, editable=False, help_text='ksuid formatter for this entity.', max_length=50, prefix='plot_', primary_key=True, serialize=False, unique=True)),
                ('label', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('main plot', 'Main Plot'), ('split plot', 'Split Plot'), ('split split plot', 'Split Split Plot'), ('split split split plot', 'Split Split Split Plot')])),
                ('block', models.CharField(blank=True, max_length=50, null=True)),
                ('row', models.CharField(blank=True, max_length=10, null=True)),
                ('column', models.CharField(blank=True, max_length=10, null=True)),
                ('width_m', models.DecimalField(decimal_places=4, help_text='The width of the plot object in meters.', max_digits=10)),
                ('length_m', models.DecimalField(decimal_places=4, help_text='The length of the plot object in meters.', max_digits=10)),
                ('location_id', models.ForeignKey(blank=True, limit_choices_to={'type': 'plot'}, null=True, on_delete=django.db.models.deletion.CASCADE, to='resources.location')),
                ('parent_plot_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='data_storage.plot')),
            ],
        ),
        migrations.CreateModel(
            name='PlotCrop',
            fields=[
                ('db_id', charidfield.fields.CharIDField(default=ksuid.ksuid.Ksuid, editable=False, help_text='ksuid formatter for this entity.', max_length=50, prefix='plotCrop_', primary_key=True, serialize=False, unique=True)),
                ('plot_year', models.IntegerField(choices=config.enumerations.YearEnum.choices, default=2024)),
                ('germplasm_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_storage.germplasm')),
                ('plot_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_storage.plot')),
            ],
        ),
        migrations.CreateModel(
            name='Observation',
            fields=[
                ('db_id', charidfield.fields.CharIDField(default=ksuid.ksuid.Ksuid, editable=False, help_text='ksuid formatter for this entity.', max_length=50, prefix='observation_', primary_key=True, serialize=False, unique=True)),
                ('date_time', models.DateTimeField()),
                ('value', models.CharField(max_length=255)),
                ('observer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resources.person')),
                ('variable_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ontology.variable', to_field='label')),
                ('plot_crop_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_storage.plotcrop')),
            ],
        ),
        migrations.CreateModel(
            name='TreatmentLevel',
            fields=[
                ('db_id', charidfield.fields.CharIDField(default=ksuid.ksuid.Ksuid, editable=False, help_text='ksuid formatter for this entity.', max_length=50, prefix='treatmentLevel_', primary_key=True, serialize=False, unique=True)),
                ('level', models.CharField(max_length=255)),
                ('treatment_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_storage.treatment')),
            ],
        ),
        migrations.CreateModel(
            name='PlotTreatment',
            fields=[
                ('db_id', charidfield.fields.CharIDField(default=ksuid.ksuid.Ksuid, editable=False, help_text='ksuid formatter for this entity.', max_length=50, prefix='plotTreatment_', primary_key=True, serialize=False, unique=True)),
                ('plot_crop_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_storage.plotcrop')),
                ('treatment_level_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_storage.treatmentlevel')),
            ],
        ),
        migrations.CreateModel(
            name='Trial',
            fields=[
                ('db_id', charidfield.fields.CharIDField(default=ksuid.ksuid.Ksuid, editable=False, help_text='ksuid formatter for this entity.', max_length=50, prefix='trial_', primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(unique=True)),
                ('establishment_year', models.IntegerField(choices=config.enumerations.YearEnum.choices, default=2024)),
                ('multi_year', models.BooleanField(default=False)),
                ('affiliation_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resources.organization')),
                ('location_id', models.ForeignKey(limit_choices_to={'type': 'trial'}, on_delete=django.db.models.deletion.CASCADE, to='resources.location')),
                ('manager_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resources.person')),
                ('project_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resources.project')),
            ],
        ),
        migrations.AddField(
            model_name='plot',
            name='trial_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plots', to='data_storage.trial'),
        ),
        migrations.CreateModel(
            name='TrialAttribute',
            fields=[
                ('db_id', charidfield.fields.CharIDField(default=ksuid.ksuid.Ksuid, editable=False, help_text='ksuid formatter for this entity.', max_length=50, prefix='trialAttr_', primary_key=True, serialize=False, unique=True)),
                ('key', models.CharField(max_length=255)),
                ('value', models.CharField(max_length=255)),
                ('date', models.DateField(max_length=255)),
                ('description', models.TextField(blank=True, max_length=500, null=True)),
                ('trial_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_storage.trial')),
            ],
        ),
        migrations.CreateModel(
            name='TrialEvent',
            fields=[
                ('db_id', charidfield.fields.CharIDField(default=ksuid.ksuid.Ksuid, editable=False, help_text='ksuid formatter for this entity.', max_length=50, prefix='trialEvent_', primary_key=True, serialize=False, unique=True)),
                ('date', models.DateField()),
                ('comment', models.TextField(max_length=500)),
                ('process_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ontology.agroprocess')),
                ('trial_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_storage.trial')),
            ],
        ),
        migrations.CreateModel(
            name='TrialTreatment',
            fields=[
                ('db_id', charidfield.fields.CharIDField(default=ksuid.ksuid.Ksuid, editable=False, help_text='ksuid formatter for this entity.', max_length=50, prefix='trialTreatment_', primary_key=True, serialize=False, unique=True)),
                ('treatment_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_storage.treatment')),
                ('trial_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_storage.trial')),
            ],
        ),
        migrations.CreateModel(
            name='TrialYear',
            fields=[
                ('db_id', charidfield.fields.CharIDField(default=ksuid.ksuid.Ksuid, editable=False, help_text='ksuid formatter for this entity.', max_length=50, prefix='trialYear_', primary_key=True, serialize=False, unique=True)),
                ('year', models.IntegerField(choices=config.enumerations.YearEnum.choices, default=2024)),
                ('trial_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_storage.trial')),
            ],
        ),
        migrations.AddConstraint(
            model_name='germplasmalias',
            constraint=models.UniqueConstraint(fields=('germplasm_id', 'alias'), name='germplasm_alias_composite_key'),
        ),
        migrations.AddConstraint(
            model_name='plotcrop',
            constraint=models.UniqueConstraint(fields=('plot_id', 'germplasm_id', 'plot_year'), name='plot_crop_composite_key'),
        ),
        migrations.AddConstraint(
            model_name='treatmentlevel',
            constraint=models.UniqueConstraint(fields=('treatment_id', 'level'), name='treatment_level_composite_key'),
        ),
        migrations.AddConstraint(
            model_name='plot',
            constraint=models.UniqueConstraint(fields=('trial_id', 'label'), name='plot_trial_unique_constraint'),
        ),
        migrations.AddConstraint(
            model_name='trialtreatment',
            constraint=models.UniqueConstraint(fields=('trial_id', 'treatment_id'), name='trial_treatment_composite_key'),
        ),
        migrations.AddConstraint(
            model_name='trialyear',
            constraint=models.UniqueConstraint(fields=('trial_id', 'year'), name='trial_year_composite_key'),
        ),
    ]
